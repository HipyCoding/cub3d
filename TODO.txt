

this is the guide i am following: (i found it the most easy to follow so far)
https://hackmd.io/@nszl/H1LXByIE2#Introduction

TODO for juidxin : 
move your lazy albanian ass and do the parsing <3

TODO, after skipping through the guide:

initialize hardcoded testmap, since i am not doing the parsing

player position
	1)	pov direction vector based on N/S/E/W
	2)	make plane vector perpendicular to direction

basic raycasting structure
	1)	calculate ray position and direction
		cam_x = 2 * x / WIDTH; 
		(to make mathematical range of -1 to +1, scaled to our window)
		ray_dir_x = c->player.dir_x + c->player.plane_x * cam_x;
		(e.g. for factor 1, the vector addition would make it the furthest right ray)
		ray_dir_y = c->player.dir_y + c->player.plane_y * cam_x;
		something like this
	2)	learn more about DDA
	3)	implement DDA
	4)	calculate wall distances
	5)	wall heights
	6)	draw vertical strips based on calculations

render environment
	1)	since y=0 is at top, start with ceiling
	2)	implement textures for different directions (NSEW)
	3)	find a way to scale textures
	4)	draw floor

implement player movement
	1)	WASD for movement
		player.pos = player.pos + (player.dir * speed)
		something like this, so we dont move in lightspeed
	2)	arrow keys for rotation
		i think this will be harder than movement
	3)	put in wall collision
